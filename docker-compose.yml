version: '3.8'

services:
  nginx:
    container_name: nginx
    image: nginx:stable-alpine
    platform: linux/amd64
    ports:
      - 80:80
      - 443:443
    networks:
      - backend
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/lib:/var/lib/letsencrypt
      - ./certbot/www:/var/www/certbot
    restart: always
  certbot:
    container_name: certbot
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/logs:/var/log/letsencrypt
      - ./certbot/lib:/var/lib/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly -n --expand --webroot --webroot-path=/var/www/certbot --email nullsafer@naver.com --agree-tos --no-eff-email -d "psythinktank.com,www.psythinktank.com,m.psythinktank.com"
  java:
    container_name: java
    image: openjdk:17-alpine
    platform: linux/amd64
    ports:
      - 8080:8080
    networks:
      - backend
    volumes:
      - ./deploy:/usr/src/app
    working_dir: /usr/src/app
    command: [ 'java', '-jar', '/usr/src/app/PSYThinktank-0.0.1.jar' ]
    depends_on:
      - postgres
      - mongo
    restart: always
  postgres:
    container_name: postgres
    image: postgres:14.11-alpine
    platform: linux/amd64
    ports:
      - 5432:5432
    networks:
      - backend
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=${PGDATA}
    volumes:
      - "./data:/var/lib/postgresql/data"
    restart: always
  mongo:
    container_name: mongo
    image: mongo:7.0.8
    platform: linux/amd64
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - ${MONGO_VOLUME}
    restart: always
networks:
  backend:
    driver: bridge
